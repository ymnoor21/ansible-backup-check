---
- hosts: archivers
  tasks:
    - name: Create local tmp directory
      file: path=/tmp/ansible state=directory
      register: local_ansible_home
      delegate_to: localhost

    - name: Create remote tmp directory
      file: path=/tmp/ansible state=directory

    - name: Create remote tmp/backup directory
      file: path=/tmp/backup state=directory

    - copy:
        src: automated_checks.py
        dest: /tmp/ansible/automated_checks.py
        mode: 0755

    # Daily backup check
    - name: Check daily backup
      command: /tmp/ansible/automated_checks.py --backup daily
      register: daily_reg

    - set_fact: daily="{{ daily_reg.stdout | from_json }}"

    - local_action:
        copy content={{ daily | to_nice_json }} dest="{{ local_ansible_home.path + '/' + ansible_hostname + '-daily.json' }}"
      when: daily.codes.result == 1 or daily.databases.result == 1

    # Weekly backup check
    - name: Check weekly backup
      command: /tmp/ansible/automated_checks.py --backup weekly
      register: weekly_reg

    - set_fact: weekly="{{ weekly_reg.stdout | from_json }}"

    - local_action:
        copy content={{ weekly | to_nice_json }} dest="{{ local_ansible_home.path + '/' + ansible_hostname + '-weekly.json' }}"
      when: weekly.codes.result == 1 or weekly.databases.result == 1 or weekly.files.result == 1

    # Monthly backup check
    - name: Check monthly backup
      command: /tmp/ansible/automated_checks.py --backup monthly
      register: monthly_reg

    - set_fact: monthly="{{ monthly_reg.stdout | from_json }}"

    - local_action:
        copy content={{ monthly | to_nice_json }} dest="{{ local_ansible_home.path + '/' + ansible_hostname + '-monthly.json' }}"
      when: monthly.all.result == 1

    # Yearly backup check
    - name: Check yearly backup
      command: /tmp/ansible/automated_checks.py --backup yearly
      register: yearly_reg

    - set_fact: yearly="{{ yearly_reg.stdout | from_json }}"
    - local_action:
        copy content={{ yearly | to_nice_json }} dest="{{ local_ansible_home.path + '/' + ansible_hostname + '-yearly.json' }}"
      when: yearly.all.result == 1

    # Email daily backup issues (if any)
    - mail:
        host: "{{ lookup('env', 'SMTP_HOST') }}"
        port: "{{ lookup('env', 'SMTP_PORT') }}"
        username: "{{ lookup('env', 'SMTP_SEND_FROM') }}"
        password: "{{ lookup('env', 'SMTP_PASSWORD') }}"
        to: "{{ lookup('env', 'SMTP_SEND_TO') }}"
        subject: Missing daily backup files for - {{ ansible_hostname }}
        body: 'Missing daily backup files for - {{ ansible_hostname }}'
        attach: "{{ local_ansible_home.path + '/' + ansible_hostname + '-daily.json' }}"
      delegate_to: localhost
      when: daily.codes.result == 1 or daily.databases.result == 1

    # Email weekly backup issues (if any)
    - mail:
        host: "{{ lookup('env', 'SMTP_HOST') }}"
        port: "{{ lookup('env', 'SMTP_PORT') }}"
        username: "{{ lookup('env', 'SMTP_SEND_FROM') }}"
        password: "{{ lookup('env', 'SMTP_PASSWORD') }}"
        to: "{{ lookup('env', 'SMTP_SEND_TO') }}"
        subject: Missing weekly backup files for - {{ ansible_hostname }}
        body: 'Missing weekly backup files for - {{ ansible_hostname }}'
        attach: "{{ local_ansible_home.path + '/' + ansible_hostname + '-weekly.json' }}"
      delegate_to: localhost
      when: weekly.codes.result == 1 or weekly.databases.result == 1 or weekly.files.result == 1

    # Email monthly backup issues (if any)
    - mail:
        host: "{{ lookup('env', 'SMTP_HOST') }}"
        port: "{{ lookup('env', 'SMTP_PORT') }}"
        username: "{{ lookup('env', 'SMTP_SEND_FROM') }}"
        password: "{{ lookup('env', 'SMTP_PASSWORD') }}"
        to: "{{ lookup('env', 'SMTP_SEND_TO') }}"
        subject: Missing monthly backup files for - {{ ansible_hostname }}
        body: 'Missing monthly backup files for - {{ ansible_hostname }}'
        attach: "{{ local_ansible_home.path + '/' + ansible_hostname + '-monthly.json' }}"
      delegate_to: localhost
      when: monthly.all.result == 1

    # Email yearly backup issues (if any)
    - mail:
        host: "{{ lookup('env', 'SMTP_HOST') }}"
        port: "{{ lookup('env', 'SMTP_PORT') }}"
        username: "{{ lookup('env', 'SMTP_SEND_FROM') }}"
        password: "{{ lookup('env', 'SMTP_PASSWORD') }}"
        to: "{{ lookup('env', 'SMTP_SEND_TO') }}"
        subject: Missing yearly backup files for - {{ ansible_hostname }}
        body: 'Missing yearly backup files for - {{ ansible_hostname }}'
        attach: "{{ local_ansible_home.path + '/' + ansible_hostname + '-yearly.json' }}"
      delegate_to: localhost
      when: yearly.all.result == 1

    - name: Colelct All local JSON files
      find:
        paths: "{{ local_ansible_home.path }}"
        patterns: "*.json"
      register: files_to_delete2
      delegate_to: localhost

    - name: Remove all local JSON files
      file:
        path: "{{ item.path }}"
        state: absent
      with_items: "{{ files_to_delete2.files }}"
      delegate_to: localhost